package bot

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"humo_bot/db"
	"strings"
)

func dispatchMessage(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
	user := update.Message.From

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç
	var dbUser db.User
	if err := db.DB.Where("telegram_id = ?", user.ID).First(&dbUser).Error; err != nil {
		dbUser = db.User{
			TelegramID: user.ID,
			Username:   user.UserName,
			FullName:   user.FirstName + " " + user.LastName,
		}
		db.DB.Create(&dbUser)
	}

	text := update.Message.Text
	lowerText := strings.ToLower(text)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	state := getUserState(user.ID)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ "–Ω–∞–∑–∞–¥"
	if lowerText == "–Ω–∞–∑–∞–¥" {
		handleBackCommand(bot, update, state)
		return
	}

	switch {
	case lowerText == "/start":
		handleStart(bot, update)

	case lowerText == "‚è∞ –æ–ø–æ–∑–¥–∞–Ω–∏–µ":
		handleLate(bot, update, state)

	case lowerText == "‚úèÔ∏è –∏–∑–º–µ–Ω–∏—Ç—å":
		handleEditInit(bot, update, dbUser, state)

	case state.CurrentAction == "editing_select":
		handleEditSelect(bot, update, dbUser, state)

	case state.CurrentAction == "editing_field":
		handleEditField(bot, update, dbUser, state)

	case state.CurrentAction == "editing_date":
		handleEditDate(bot, update, state)

	case state.CurrentAction == "editing_type":
		handleEditType(bot, update, state)

	case state.CurrentAction == "editing_comment":
		handleEditComment(bot, update, state)

	case state.CurrentAction == "editing_minutes":
		handleEditMinutes(bot, update, state)

	case state.CurrentAction == "late" && !state.IsManualTime && (strings.Contains(lowerText, "–º–∏–Ω—É—Ç") || strings.Contains(lowerText, "—á–∞—Å")):
		handleLateTime(bot, update, state)

	case state.CurrentAction == "late" && lowerText == "—É–∫–∞–∑–∞—Ç—å –≤—Ä—É—á–Ω—É—é":
		handleLateManualRequest(bot, update, state)

	case state.CurrentAction == "late_manual_time":
		handleLateManualTime(bot, update, state)

	case state.CurrentAction == "late_reason":
		handleLateReason(bot, update, state)

	case state.CurrentAction == "late_comment":
		handleLateComment(bot, update, dbUser, state)

	case lowerText == "üìã –∏—Å—Ç–æ—Ä–∏—è":
		showHistory(bot, update, dbUser)

	case lowerText == "—É–¥–∞–ª–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞—è–≤–∫–∏":
		deleteAllToday(bot, update, dbUser)

	default:
		msg.Text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."
		msg.ReplyMarkup = GetMainKeyboard()
		bot.Send(msg)
	}
}
